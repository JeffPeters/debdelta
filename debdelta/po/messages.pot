# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2010-11-06 23:40+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../debdelta:30
msgid ""
"Usage: debdelta [ option...  ] fromfile tofile delta\n"
"  Computes the difference of two deb files, from fromfile to tofile, and "
"writes it to delta\n"
"\n"
"Options:\n"
"--signing-key KEY\n"
"            gnupg key used to sign the delta\n"
"--no-md5    do not include MD5 info in delta\n"
"--needsold  create a delta that can only be used if the old deb is "
"available\n"
" -M Mb      maximum memory  to use (for 'bsdiff' or 'xdelta')\n"
"--delta-algo ALGO\n"
"            use a specific backend for computing binary diffs\n"
msgstr ""

#: ../debdelta:45
msgid ""
"Usage: debdeltas [ option...  ]  [deb files and dirs, or 'Package' files]\n"
"  Computes all missing deltas for deb files.\n"
"  It orders by version number and produce deltas to the newest version\n"
"\n"
"Options:\n"
"--signing-key KEY\n"
"            key used to sign the deltas (using GnuPG)\n"
"--dir DIR   force saving of deltas in this DIR\n"
"            (otherwise they go in the dir of the newer deb_file)\n"
"--old ARGS  'Package' files containing list of old versions of debs\n"
"--alt ARGS  for any cmdline argument, search for debs also in this place\n"
" -n N       how many deltas to produce for each deb (default unlimited)\n"
"--no-md5    do not include MD5 info in delta\n"
"--needsold  create a delta that can only be used if the old .deb is "
"available\n"
"--delta-algo ALGO\n"
"            use a specific backend for computing binary diffs;\n"
"            possible values are: xdelta xdelta-bzip xdelta3 bsdiff\n"
" -M Mb      maximum memory to use (for 'bsdiff' or 'xdelta')\n"
"--clean-deltas     delete deltas if newer deb is not in archive\n"
msgstr ""

#: ../debdelta:69
msgid ""
"Usage: debpatch [ option...  ] delta  fromfile  tofile \n"
"  Applies delta to fromfile and produces a reconstructed  version of "
"tofile.\n"
"\n"
"(When using 'debpatch' and the old .deb is not available,\n"
"  use '/' for the fromfile.)\n"
"\n"
"Usage: debpatch --info delta\n"
"  Write info on delta.\n"
"\n"
"Options:\n"
"--no-md5   do not verify MD5 (if found in info in delta)\n"
" -A        accept unsigned deltas\n"
msgstr ""

#: ../debdelta:84
msgid ""
"Usage: debdelta-upgrade [package names]\n"
"  Downloads all deltas and apply them to create the debs\n"
"  that are needed by 'apt-get upgrade'.\n"
"\n"
"Options:\n"
"--dir DIR   directory where to save results\n"
"--deb-policy POLICY\n"
"            policy to decide which debs to download,\n"
" -A         accept unsigned deltas\n"
msgstr ""

#: ../debdelta:96
msgid ""
"Usage: debpatch-url [package names]\n"
"  Show URL wherefrom to downloads all deltas that may be used to upgrade the "
"given package names\n"
msgstr ""

#: ../debdelta:101
msgid ""
" -v         verbose (can be added multiple times)\n"
"--no-act    do not do that (whatever it is!)\n"
" -d         add extra debugging checks\n"
" -k         keep temporary files (use for debugging)\n"
"--gpg-home HOME\n"
"            specify a different home for GPG\n"
"\n"
"See man page for more options and details.\n"
msgstr ""

#: ../debdelta:258
msgid "Error: argument of --dir is not a directory:"
msgstr ""

#: ../debdelta:262
msgid "Error: argument of --alt is not a directory or a regular file:"
msgstr ""

#: ../debdelta:267
msgid "Error: argument of --old is not a directory or a regular file:"
msgstr ""

#: ../debdelta:283
#, python-format
msgid "Error: --gpg-home `%s' does not exist."
msgstr ""

#: ../debdelta:286
#, python-format
msgid "Error: option `%s' is unknown, try --help"
msgstr ""

#: ../debdelta:291
#, python-format
msgid "Error: feature `%s' cannot be disabled."
msgstr ""

#: ../debdelta:608 ../debdelta:618
#, python-format
msgid "Error: the file `%s' does not exist."
msgstr ""

#: ../debdelta:610 ../debdelta:620
#, python-format
msgid "Error: `%s' is not a regular file."
msgstr ""

#: ../debdelta:613
#, python-format
msgid "Error: `%s' does not seem to be a Debian package."
msgstr ""

#: ../debdelta:623
#, python-format
msgid "Error: `%s' does not seem to be a Debian delta."
msgstr ""

#: ../debdelta:902
#, python-format
msgid ""
"not enough disk space (%(free)dkB) in directory %(dir)s for applying delta "
"(needs %(size)dkB)"
msgstr ""

#: ../debdelta:1244
msgid "Delta is not signed:"
msgstr ""

#: ../debdelta:1246
msgid "WARNING, delta is not signed:"
msgstr ""

#: ../debdelta:1557
msgid "(Faulty delta. Please consider retrying with the option \"-d\" )."
msgstr ""

#: ../debdelta:1560 ../debdelta:1580
#, python-format
msgid "Faulty delta. Please send by email to %s the following files:"
msgstr ""

#: ../debdelta:1630
#, python-format
msgid "Patching done, time %(time).2fsec, speed %(speed)dk/sec"
msgstr ""

#: ../debdelta:1632
#, python-format
msgid "(script %(time).2fsec %(speed)dk/sec)"
msgstr ""

#: ../debdelta:1636
#, python-format
msgid "(prelink %(time).2fsec, %(size)dk, %(speed)dk/s)"
msgstr ""

#: ../debdelta:1638 ../debdelta:1640
#, python-format
msgid "(unaccounted %.2fsec)"
msgstr ""

#: ../debdelta:2753
#, python-format
msgid ""
"delta is %(perc)3.1f%% of deb; that is, %(save)dkB are saved, on a total of "
"%(tot)dkB."
msgstr ""

#: ../debdelta:2755
#, python-format
msgid ""
"delta time %(time).2f sec, speed %(speed)dkB /sec, (%(algo)s time "
"%(algotime).2fsec speed %(algospeed)dkB /sec) (corr %(corrtime).2f sec)"
msgstr ""

#: ../debdelta:2768
msgid "Warning, no non-option arguments, debdeltas does nothing."
msgstr ""

#: ../debdelta:2772
msgid "Warning, no --old arguments, debdeltas will not generate any deltas."
msgstr ""

#: ../debdelta:3176
#, python-format
msgid "Not enough disk space for storing `%s'."
msgstr ""

#: ../debdelta:3216
msgid "Creating:"
msgstr ""

#: ../debdelta:3253
msgid "Error: testing of delta failed:"
msgstr ""

#: ../debdelta:3300
#, python-format
msgid "Total running time: %.1f"
msgstr ""

#: ../debdelta:3415
#, python-format
msgid "(sources.conf does not provide a server for `%s')"
msgstr ""

#: ../debdelta:3430
msgid ""
" Proxy settings detected in the environment; using \"urllib2\" for "
"downloading; but\n"
"  this disables some features and is in general slower and buggier. See man "
"page."
msgstr ""

#: ../debdelta:3442 ../debdelta:3444
msgid "Initializing APT cache..."
msgstr ""

#: ../debdelta:3472
msgid "Upgrading APT cache..."
msgstr ""

#: ../debdelta:3474
msgid "upgrading..."
msgstr ""

#: ../debdelta:3480
msgid "Upgraded APT cache."
msgstr ""

#: ../debdelta:3482
msgid "done."
msgstr ""

#: ../debdelta:3518
#, python-format
msgid "Recreated debs are saved in the directory %s"
msgstr ""

#: ../debdelta:3561
#, python-format
msgid "Created,    time %(time)5.2fsec, speed %(speed)4s/sec, %(name)s"
msgstr ""

#: ../debdelta:3831
msgid "Not enough disk space to download:"
msgstr ""

#: ../debdelta:3856
#, python-format
msgid "Downloaded, time %(time)5.2fsec, speed %(speed)4s/sec, %(name)s"
msgstr ""

#: ../debdelta:4009
#, python-format
msgid "Downloading head of %s..."
msgstr ""

#: ../debdelta:4029
msgid "Delta is too big:"
msgstr ""

#: ../debdelta:4035 ../debdelta:4037
msgid "Delta is not present:"
msgstr ""

#: ../debdelta:4047
#, python-format
msgid "Downloaded head of %s."
msgstr ""

#: ../debdelta:4085
#, python-format
msgid "Deltas: %(present)d present and %(absent)d not,"
msgstr ""

#: ../debdelta:4087
#, python-format
msgid ""
"downloaded so far: time %(time).2fsec, size %(size)s, speed %(speed)4s/sec."
msgstr ""

#: ../debdelta:4090
#, python-format
msgid "Need to get %s of deltas."
msgstr ""

#: ../debdelta:4126
msgid "You may wish to rerun, to get also:"
msgstr ""

#: ../debdelta:4181
msgid "Delta-upgrade statistics:"
msgstr ""

#: ../debdelta:4182
#, python-format
msgid "size %(size)s time %(time)dsec speed %(speed)s/sec"
msgstr ""

#: ../debdelta:4187
msgid "downloaded deltas, "
msgstr ""

#: ../debdelta:4192
msgid "patching to debs, "
msgstr ""

#: ../debdelta:4197
msgid "downloaded debs, "
msgstr ""

#: ../debdelta:4202
#, python-format
msgid ""
"total resulting debs, size %(size)s time %(time)dsec virtual speed %(speed)s/"
"sec"
msgstr ""

#: ../debdelta:4218
msgid "Need a filename; try --help."
msgstr ""

#: ../debdelta:4239 ../debdelta:4261
msgid "Need 3 filenames; try --help."
msgstr ""

#: ../debdelta:4281
msgid "Error: argument is not a directory or a regular file:"
msgstr ""

#: ../debdelta:4334
#, python-format
msgid "Lookup %s"
msgstr ""

#: ../debdelta:4340
#, python-format
msgid "Sorry, cannot find an URI to download the debian package of `%s'."
msgstr ""

#: ../debdelta:4356
#, python-format
msgid "Sorry, no source is available to upgrade `%s'."
msgstr ""

#: ../debdelta:4360
#, python-format
msgid "Sorry, the package `%s' is already at its newest version."
msgstr ""
